geom_bar(stat="identity",fill="#4f94cd")+
xlab("Sectores")+
ylab("Valores")+
geom_hline(yintercept=media1, linetype="dashed", color = "coral")+
theme_classic()+
theme(axis.text.x = element_text(angle=25, vjust=0.6))
})
######### DESCARGAS ########
output$descargarRdat <- downloadHandler(
filename = "variable.Rdata",
content = function(file) {
if (input$dataset == "nEmpresas"){
write.table(nEmpresas[], file, row.names = FALSE)
}
if (input$dataset == "cifraNeg"){
write.table(cifraNeg[], file, row.names = FALSE)
}
if (input$dataset == "vAñadido"){
write.table(vAñadido[], file, row.names = FALSE)
}
if (input$dataset == "nOcupados"){
write.table(nOcupados[], file, row.names = FALSE)
}
}
)
#Aqui hay que poner la direccion donde se encuentra el codigo en el ordenador
output$descargarCodigo <- downloadHandler(
filename = "codigo.R",
content = function(file) {
file.copy("", file)
}
)
#Aqui hay que poner la direccion donde se encuentra el codigo en el ordenador
output$ descargarProtocolo <- downloadHandler(
filename = "protocolo.html",
content = function(file) {
file.copy("", file)
}
)
#Aqui hay que poner la direccion donde se encuentra el codigo en el ordenador
output$ descargarInforme <- downloadHandler(
filename = "informe.pdf",
content = function(file) {
file.copy("", file)
}
)
output$descargarVariables <- downloadHandler(
filename = "variable.csv",
content = function(file) {
if (input$dataset == "nEmpresas"){
write.csv(nEmpresas[], file, row.names = FALSE)
}
if (input$dataset == "cifraNeg"){
write.csv(cifraNeg[], file, row.names = FALSE)
}
if (input$dataset == "vAñadido"){
write.csv(vAñadido[], file, row.names = FALSE)
}
if (input$dataset == "nOcupados"){
write.csv(nOcupados[], file, row.names = FALSE)
}
}
)
}
# Run the application
shinyApp(ui = ui, server = server)
# Define UI for application that draws a histogram
library(shiny)
library(plotly)
library(shinyWidgets)
library(ggplot2)
library(shinythemes)
ui <-navbarPage(
theme = shinytheme("flatly"),
title= "Proyecto Loreto",
tabPanel("Variables",
sidebarLayout(
sidebarPanel(
selectInput("var","Variables:",
c("Número de empresas en el sector TIC por ramas de actividad del sector TIC y periodo" ="nEmpresas",
"Cifra de negocios en el sector TIC por ramas de actividad del sector TIC y periodo" ="cifraNeg",
"Valor añadido en el sector TIC por ramas de actividad del sector TIC y periodo"= "vAñadido",
"Número de ocupados en el sector TIC por ramas de actividad del sector TIC y periodo"="nOcupados")),
selectInput("sect","Sectores:",choices = c(sectores[2])),
selectInput("per","Periodo:",choices = c(periodo))
),
# Show a plot of the generated distribution
mainPanel(
tabsetPanel(
tabPanel(title = "En funcion del sector",
h4("Grafico"),
plotlyOutput("grafico"),
h4("Valores del gráfio"),
tableOutput("dat")
),
tabPanel(title ="En función del año",
h4("Comparación entre industrias manufacteras TIC y Servicos"),
plotlyOutput("difindyserv"),
h4("Industrias de servicios TIC"),
plotlyOutput("servTIC"),
h4("Valores del los gráficos"),
tableOutput("tab")
)
)
)
)
),
tabPanel("Descargas",
selectInput("dataset", "Escoge una Variable:",width ='1000px',
choices = c("Número de empresas en el sector TIC por ramas de actividad del sector TIC y periodo" ="nEmpresas",
"Cifra de negocios en el sector TIC por ramas de actividad del sector TIC y periodo" ="cifraNeg",
"Valor añadido en el sector TIC por ramas de actividad del sector TIC y periodo"= "vAñadido",
"Número de ocupados en el sector TIC por ramas de actividad del sector TIC y periodo"="nOcupados")),
fluidRow(
column(5,
wellPanel(
h4("Descargar Variable seleccionada en Rdata"),
downloadButton("descargarRdat", label = "Descargar")
)
),
column(5,
wellPanel(
h4("Descargar la variable seleccionada en csv"),
downloadButton("descargarVariables", label = "Descargar")
)
),
column(5,
wellPanel(
h4("Descargar el código"),
downloadButton("descargarCodigo", label = "Descargar")
)
),
column(5,
wellPanel(
h4("Descargar el protocolo"),
downloadButton("descargarProtocolo", label = "Descargar")
)
),
column(5,
wellPanel(
h4("Descargar el informe"),
downloadButton("descargarInforme", label = "Descargar")
)
)
)
)
)#UI
#Seleccion de la variable
server <- function(input, output) {
#selección de la variable
variable <- reactive ({
# if (input$var== "nEmpresas"){
#   filtrado= filter(nEmpresas, input$sect %in% nEmpresas$Ramas.de.actividad.del.sector.TIC )
# }
if (input$var== "nEmpresas") {
filtrado = nEmpresas
}
if (input$var == "cifraNeg") {
filtrado = cifraNeg
}
if (input$var == "vAñadido") {
filtrado = vAñadido
}
if (input$var == "nOcupados") {
filtrado = nOcupados
}
return(filtrado
)
})
output$dat <- renderTable({
var=variable()
tabla<-var[var$Ramas.de.actividad.del.sector.TIC==input$sect,];
tabla<-subset(tabla, select= c("periodo", "value"))
})
output$grafico <- renderPlotly({
var=variable()
graf<-var[var$Ramas.de.actividad.del.sector.TIC==input$sect  ,];
graf<-as.data.frame(graf);
graf1<-t(t(graf[3]));
años1<-t(t(periodo))
df1 <- data.frame(años1,
graf1)
ggplot(data=df1, aes(x=años1, y=graf1, group=1))+
geom_line(color="#4f94cd")+
geom_point(color="#00688b")+
xlab("Años")+
ylab("Valores")+
theme_classic()
})
output$tab <- renderTable({
tabla<-nEmpresas[var$Ramas.de.actividad.del.sector.TIC==input$per ,];
tabla<-subset(tabla, select=c("Ramas.de.actividad.del.sector.TIC", "value"))
})
output$difindyserv <- renderPlotly({
tabla1<-nEmpresas[var$Ramas.de.actividad.del.sector.TIC==input$per ,];
tabla1<-tabla1[1:2,];
tabla1<-as.data.frame(tabla1);
dat1<-t(t(tabla1[3]));
com1<-c("1. INDUSTRIAS MANUFACTURERAS TIC","2 SERVICIOS");
media1<-mean(dat1)+
theme(axis.text.x = element_text(angle=55, vjust=0.6))
df11 <- data.frame(com1,
dat1)
ggplot(data=df11, aes(x=com1, y=dat1, group=1))+
geom_bar(stat="identity",fill="#4f94cd")+
xlab("Sectores")+
ylab("Valores ")+
theme_classic()
})
output$servTIC <- renderPlotly({
tabla1<-nEmpresas[nEmpresas$periodo==input$per ,];
tabla1<-tabla1[4:8,];
tabla1<-as.data.frame(tabla1);
dat1<-t(t(tabla1[3]));
com1<-c("EDICIÓN DE PROGRAMAS INFORMÁTICOS          2.b.1 ",
"TELECOMUNICACIONES         2.b.2",
"PROGRAMACIÓN, CONSULTORÍA Y OTRAS ACTIVIDADES RELACIONADAS CON LA INFORMÁTICA            2.b.3 ",
"PORTALES WEB, PROCESAMIENTO DE DATOS, HOSTING Y ACTIVIDADES RELACIONADAS         2.b.4",
"REPARACION DE ORDENADORES Y EQUIPOS DE COMUNICACIÓN         2.b.5 ");
media1<-mean(dat1)
df11 <- data.frame(com1,
dat1)
ggplot(data=df11, aes(x=com1, y=dat1, group=1))+
geom_bar(stat="identity",fill="#4f94cd")+
xlab("Sectores")+
ylab("Valores")+
geom_hline(yintercept=media1, linetype="dashed", color = "coral")+
theme_classic()+
theme(axis.text.x = element_text(angle=25, vjust=0.6))
})
######### DESCARGAS ########
output$descargarRdat <- downloadHandler(
filename = "variable.Rdata",
content = function(file) {
if (input$dataset == "nEmpresas"){
write.table(nEmpresas[], file, row.names = FALSE)
}
if (input$dataset == "cifraNeg"){
write.table(cifraNeg[], file, row.names = FALSE)
}
if (input$dataset == "vAñadido"){
write.table(vAñadido[], file, row.names = FALSE)
}
if (input$dataset == "nOcupados"){
write.table(nOcupados[], file, row.names = FALSE)
}
}
)
#Aqui hay que poner la direccion donde se encuentra el codigo en el ordenador
output$descargarCodigo <- downloadHandler(
filename = "codigo.R",
content = function(file) {
file.copy("", file)
}
)
#Aqui hay que poner la direccion donde se encuentra el codigo en el ordenador
output$ descargarProtocolo <- downloadHandler(
filename = "protocolo.html",
content = function(file) {
file.copy("", file)
}
)
#Aqui hay que poner la direccion donde se encuentra el codigo en el ordenador
output$ descargarInforme <- downloadHandler(
filename = "informe.pdf",
content = function(file) {
file.copy("", file)
}
)
output$descargarVariables <- downloadHandler(
filename = "variable.csv",
content = function(file) {
if (input$dataset == "nEmpresas"){
write.csv(nEmpresas[], file, row.names = FALSE)
}
if (input$dataset == "cifraNeg"){
write.csv(cifraNeg[], file, row.names = FALSE)
}
if (input$dataset == "vAñadido"){
write.csv(vAñadido[], file, row.names = FALSE)
}
if (input$dataset == "nOcupados"){
write.csv(nOcupados[], file, row.names = FALSE)
}
}
)
}
# Run the application
shinyApp(ui = ui, server = server)
# Define UI for application that draws a histogram
library(shiny)
library(plotly)
library(shinyWidgets)
library(ggplot2)
library(shinythemes)
ui <-navbarPage(
theme = shinytheme("flatly"),
title= "Proyecto Loreto",
tabPanel("Variables",
sidebarLayout(
sidebarPanel(
selectInput("var","Variables:",
c("Número de empresas en el sector TIC por ramas de actividad del sector TIC y periodo" ="nEmpresas",
"Cifra de negocios en el sector TIC por ramas de actividad del sector TIC y periodo" ="cifraNeg",
"Valor añadido en el sector TIC por ramas de actividad del sector TIC y periodo"= "vAñadido",
"Número de ocupados en el sector TIC por ramas de actividad del sector TIC y periodo"="nOcupados")),
selectInput("sect","Sectores:",choices = c(sectores[2])),
selectInput("per","Periodo:",choices = c(periodo))
),
# Show a plot of the generated distribution
mainPanel(
tabsetPanel(
tabPanel(title = "En funcion del sector",
h4("Grafico"),
plotlyOutput("grafico"),
h4("Valores del gráfio"),
tableOutput("dat")
),
tabPanel(title ="En función del año",
h4("Comparación entre industrias manufacteras TIC y Servicos"),
plotlyOutput("difindyserv"),
h4("Industrias de servicios TIC"),
plotlyOutput("servTIC"),
h4("Valores del los gráficos"),
tableOutput("tab")
)
)
)
)
),
tabPanel("Descargas",
selectInput("dataset", "Escoge una Variable:",width ='1000px',
choices = c("Número de empresas en el sector TIC por ramas de actividad del sector TIC y periodo" ="nEmpresas",
"Cifra de negocios en el sector TIC por ramas de actividad del sector TIC y periodo" ="cifraNeg",
"Valor añadido en el sector TIC por ramas de actividad del sector TIC y periodo"= "vAñadido",
"Número de ocupados en el sector TIC por ramas de actividad del sector TIC y periodo"="nOcupados")),
fluidRow(
column(5,
wellPanel(
h4("Descargar Variable seleccionada en Rdata"),
downloadButton("descargarRdat", label = "Descargar")
)
),
column(5,
wellPanel(
h4("Descargar la variable seleccionada en csv"),
downloadButton("descargarVariables", label = "Descargar")
)
),
column(5,
wellPanel(
h4("Descargar el código"),
downloadButton("descargarCodigo", label = "Descargar")
)
),
column(5,
wellPanel(
h4("Descargar el protocolo"),
downloadButton("descargarProtocolo", label = "Descargar")
)
),
column(5,
wellPanel(
h4("Descargar el informe"),
downloadButton("descargarInforme", label = "Descargar")
)
)
)
)
)#UI
#Seleccion de la variable
server <- function(input, output) {
#selección de la variable
variable <- reactive ({
# if (input$var== "nEmpresas"){
#   filtrado= filter(nEmpresas, input$sect %in% nEmpresas$Ramas.de.actividad.del.sector.TIC )
# }
if (input$var== "nEmpresas") {
filtrado = nEmpresas
}
if (input$var == "cifraNeg") {
filtrado = cifraNeg
}
if (input$var == "vAñadido") {
filtrado = vAñadido
}
if (input$var == "nOcupados") {
filtrado = nOcupados
}
return(filtrado
)
})
output$dat <- renderTable({
var=variable()
tabla<-var[var$Ramas.de.actividad.del.sector.TIC==input$sect,];
tabla<-subset(tabla, select= c("periodo", "value"))
})
output$grafico <- renderPlotly({
var=variable()
graf<-var[var$Ramas.de.actividad.del.sector.TIC==input$sect  ,];
graf<-as.data.frame(graf);
graf1<-t(t(graf[3]));
años1<-t(t(periodo))
df1 <- data.frame(años1,
graf1)
ggplot(data=df1, aes(x=años1, y=graf1, group=1))+
geom_line(color="#4f94cd")+
geom_point(color="#00688b")+
xlab("Años")+
ylab("Valores")+
theme_classic()
})
output$tab <- renderTable({
tabla<-nEmpresas[nEmpresas$periodo==input$per ,];
tabla<-subset(tabla, select=c("Ramas.de.actividad.del.sector.TIC", "value"))
})
output$difindyserv <- renderPlotly({
tabla1<-nEmpresas[nEmpresas$periodo==input$per ,];
tabla1<-tabla1[1:2,];
tabla1<-as.data.frame(tabla1);
dat1<-t(t(tabla1[3]));
com1<-c("1. INDUSTRIAS MANUFACTURERAS TIC","2 SERVICIOS");
media1<-mean(dat1)+
theme(axis.text.x = element_text(angle=55, vjust=0.6))
df11 <- data.frame(com1,
dat1)
ggplot(data=df11, aes(x=com1, y=dat1, group=1))+
geom_bar(stat="identity",fill="#4f94cd")+
xlab("Sectores")+
ylab("Valores ")+
theme_classic()
})
output$servTIC <- renderPlotly({
tabla1<-nEmpresas[nEmpresas$periodo==input$per ,];
tabla1<-tabla1[4:8,];
tabla1<-as.data.frame(tabla1);
dat1<-t(t(tabla1[3]));
com1<-c("EDICIÓN DE PROGRAMAS INFORMÁTICOS          2.b.1 ",
"TELECOMUNICACIONES         2.b.2",
"PROGRAMACIÓN, CONSULTORÍA Y OTRAS ACTIVIDADES RELACIONADAS CON LA INFORMÁTICA            2.b.3 ",
"PORTALES WEB, PROCESAMIENTO DE DATOS, HOSTING Y ACTIVIDADES RELACIONADAS         2.b.4",
"REPARACION DE ORDENADORES Y EQUIPOS DE COMUNICACIÓN         2.b.5 ");
media1<-mean(dat1)
df11 <- data.frame(com1,
dat1)
ggplot(data=df11, aes(x=com1, y=dat1, group=1))+
geom_bar(stat="identity",fill="#4f94cd")+
xlab("Sectores")+
ylab("Valores")+
geom_hline(yintercept=media1, linetype="dashed", color = "coral")+
theme_classic()+
theme(axis.text.x = element_text(angle=25, vjust=0.6))
})
######### DESCARGAS ########
output$descargarRdat <- downloadHandler(
filename = "variable.Rdata",
content = function(file) {
if (input$dataset == "nEmpresas"){
write.table(nEmpresas[], file, row.names = FALSE)
}
if (input$dataset == "cifraNeg"){
write.table(cifraNeg[], file, row.names = FALSE)
}
if (input$dataset == "vAñadido"){
write.table(vAñadido[], file, row.names = FALSE)
}
if (input$dataset == "nOcupados"){
write.table(nOcupados[], file, row.names = FALSE)
}
}
)
#Aqui hay que poner la direccion donde se encuentra el codigo en el ordenador
output$descargarCodigo <- downloadHandler(
filename = "codigo.R",
content = function(file) {
file.copy("", file)
}
)
#Aqui hay que poner la direccion donde se encuentra el codigo en el ordenador
output$ descargarProtocolo <- downloadHandler(
filename = "protocolo.html",
content = function(file) {
file.copy("", file)
}
)
#Aqui hay que poner la direccion donde se encuentra el codigo en el ordenador
output$ descargarInforme <- downloadHandler(
filename = "informe.pdf",
content = function(file) {
file.copy("", file)
}
)
output$descargarVariables <- downloadHandler(
filename = "variable.csv",
content = function(file) {
if (input$dataset == "nEmpresas"){
write.csv(nEmpresas[], file, row.names = FALSE)
}
if (input$dataset == "cifraNeg"){
write.csv(cifraNeg[], file, row.names = FALSE)
}
if (input$dataset == "vAñadido"){
write.csv(vAñadido[], file, row.names = FALSE)
}
if (input$dataset == "nOcupados"){
write.csv(nOcupados[], file, row.names = FALSE)
}
}
)
}
# Run the application
shinyApp(ui = ui, server = server)
